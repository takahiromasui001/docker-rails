name: docker-rails-ci

on:
  pull_request:
    branches: [develop]
  push:

jobs:
  rubocop:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # Pull the latest image to build, and avoid caching pull-only images.
      # (docker pull is faster than caching in most cases.)
      # - run: docker-compose pull

      # In this step, this action saves a list of existing images,
      # the cache is created without them in the post run.
      # It also restores the cache if it exists.
      # - uses: satackey/action-docker-layer-caching@v0.0.11
      #   # Ignore the failure of a step and avoid terminating the job.
      #   continue-on-error: true
      #   with:
      #     key: docker-save-${{ hashFiles('Dockerfile') }}
      #     restore-keys: |
      #       docker-cache-
      - name: Cache docker image
        id: cache-docker-image
        uses: actions/cache@v2
        with:
          path: /tmp/cache/docker-image
          key: docker-rails-${{ hashFiles('Dockerfile') }}
          restore-keys: |
            docker-rails-
      - name: compose-run
        env:
          DOCKER_BUILDKIT: 1
        run: |
          docker-compose up -d
          docker-compose exec -T web bundle exec rubocop
